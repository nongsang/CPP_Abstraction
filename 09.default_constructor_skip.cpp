#include <iostream>

using namespace std;

class CTest
{
	int m_nNum{ 0 };	// 멤버변수 초기화
public:
	CTest(int num) : m_nNum(num)	// 생성자	int& num은 불가능
	{
		cout << m_nNum << " CTest 생성자" << endl;
	}

	~CTest()						// 소멸자
	{
		cout << m_nNum << " CTest 소멸자" << endl;
	}
};

int main()
{
	cout << "main() 시작" << endl;

	//CTest C;		// 불가능
	CTest C1(1);	// 지역으로 생성한 객체 1
	CTest C2(2);	// 지역으로 생성한 객체 2

	cout << "main() 끝" << endl;
}

// 7번째 줄
// 유니폼 초기화를 이용한 멤버변수 초기화

// 9번째 줄
// 생성자 정의를 하였다.
// 다만 파라미터가 있고 받은 값을 멤버변수에 값을 저장하는 역할을 수행한다.

// 14번째 줄
// 소멸자 정의

// 24번째 줄
// 생성자가 있음에도 디폴트 생성은 허용하지 않는다.
// 왜냐하면 디폴트 생성자가 존재하지 않기때문이다.

// 25, 26번째 줄
// 객체를 각자 생성하여 값을 전달한다.
// 자신이 몇번 객체인지를 인식할 수 있게끔 코딩한 것.

// 이를 통해 유추할 수 있는 결과는
// 1. 지역으로 생성한 객체만 존재한다면 main()함수가 먼저 불린다.
// 2. 지역으로 생성한 객체만 존재한다면 먼저 불린 객체의 생성자가 먼저 호출된다.
// 3. 가장 먼저 생성자가 호출된 객체는 가장 나중에 소멸자가 호출된다.
//
// 전역으로 생성한 객체가 존재한다면
// 1. 전역으로 생성한 객체가 존재한다면 main()함수보다 먼저 생성자가 호출된다.
// 2. 그게 아니라면 main()함수가 먼저 불린다.
// 3. 먼저 생성된 객체의 생성자가 호출된다.
// 4. main()함수가 끝나야 소멸자가 호출된다.
// 5. 가장 먼저 생성자가 호출된 객체의 소멸자가 가장 나중에 호출된다.